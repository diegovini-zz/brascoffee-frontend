{"remainingRequest":"/home/diih/Desktop/dev/portfolio/brascoffee-frontend/node_modules/babel-loader/lib/index.js!/home/diih/Desktop/dev/portfolio/brascoffee-frontend/node_modules/vuetify/lib/components/VCalendar/util/events.js","dependencies":[{"path":"/home/diih/Desktop/dev/portfolio/brascoffee-frontend/node_modules/vuetify/lib/components/VCalendar/util/events.js","mtime":499162500000},{"path":"/home/diih/Desktop/dev/portfolio/brascoffee-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/diih/Desktop/dev/portfolio/brascoffee-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { parseTimestamp, getDayIdentifier, getTimestampIdentifier, OFFSET_TIME, isTimedless, updateHasTime } from \"./timestamp\";\nexport function parseEvent(input, index, startProperty, endProperty) {\n  var timed = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  var category = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var startInput = input[startProperty];\n  var endInput = input[endProperty];\n  var startParsed = parseTimestamp(startInput, true);\n  var endParsed = endInput ? parseTimestamp(endInput, true) : startParsed;\n  var start = isTimedless(startInput) ? updateHasTime(startParsed, timed) : startParsed;\n  var end = isTimedless(endInput) ? updateHasTime(endParsed, timed) : endParsed;\n  var startIdentifier = getDayIdentifier(start);\n  var startTimestampIdentifier = getTimestampIdentifier(start);\n  var endIdentifier = getDayIdentifier(end);\n  var endOffset = start.hasTime ? 0 : 2359;\n  var endTimestampIdentifier = getTimestampIdentifier(end) + endOffset;\n  var allDay = !start.hasTime;\n  return {\n    input: input,\n    start: start,\n    startIdentifier: startIdentifier,\n    startTimestampIdentifier: startTimestampIdentifier,\n    end: end,\n    endIdentifier: endIdentifier,\n    endTimestampIdentifier: endTimestampIdentifier,\n    allDay: allDay,\n    index: index,\n    category: category\n  };\n}\nexport function isEventOn(event, dayIdentifier) {\n  return dayIdentifier >= event.startIdentifier && dayIdentifier <= event.endIdentifier && dayIdentifier * OFFSET_TIME !== event.endTimestampIdentifier;\n}\nexport function isEventStart(event, day, dayIdentifier, firstWeekday) {\n  return dayIdentifier === event.startIdentifier || firstWeekday === day.weekday && isEventOn(event, dayIdentifier);\n}\nexport function isEventOverlapping(event, startIdentifier, endIdentifier) {\n  return startIdentifier <= event.endIdentifier && endIdentifier >= event.startIdentifier;\n}",{"version":3,"sources":["../../../../src/components/VCalendar/util/events.ts"],"names":[],"mappings":"AAAA,SAAA,cAAA,EAAA,gBAAA,EAAA,sBAAA,EAAA,WAAA,EAAA,WAAA,EAAA,aAAA;AAUA,OAAM,SAAA,UAAA,CAAA,KAAA,EAAA,KAAA,EAAA,aAAA,EAAA,WAAA,EAM4B;AAAA,MADhC,KACgC,uEAN5B,KAM4B;AAAA,MAAhC,QAAgC,uEAN5B,KAM4B;AAEhC,MAAM,UAAU,GAAG,KAAK,CAAxB,aAAwB,CAAxB;AACA,MAAM,QAAQ,GAAG,KAAK,CAAtB,WAAsB,CAAtB;AACA,MAAM,WAAW,GAAsB,cAAc,CAAA,UAAA,EAArD,IAAqD,CAArD;AACA,MAAM,SAAS,GAAuB,QAAQ,GAAG,cAAc,CAAA,QAAA,EAAjB,IAAiB,CAAjB,GAA9C,WAAA;AACA,MAAM,KAAK,GAAsB,WAAW,CAAX,UAAW,CAAX,GAC7B,aAAa,CAAA,WAAA,EADgB,KAChB,CADgB,GAAjC,WAAA;AAGA,MAAM,GAAG,GAAsB,WAAW,CAAX,QAAW,CAAX,GAC3B,aAAa,CAAA,SAAA,EADc,KACd,CADc,GAA/B,SAAA;AAGA,MAAM,eAAe,GAAW,gBAAgB,CAAhD,KAAgD,CAAhD;AACA,MAAM,wBAAwB,GAAW,sBAAsB,CAA/D,KAA+D,CAA/D;AACA,MAAM,aAAa,GAAW,gBAAgB,CAA9C,GAA8C,CAA9C;AACA,MAAM,SAAS,GAAW,KAAK,CAAL,OAAA,GAAA,CAAA,GAA1B,IAAA;AACA,MAAM,sBAAsB,GAAW,sBAAsB,CAAtB,GAAsB,CAAtB,GAAvC,SAAA;AACA,MAAM,MAAM,GAAY,CAAC,KAAK,CAA9B,OAAA;AAEA,SAAO;AAAE,IAAA,KAAF,EAAE,KAAF;AAAS,IAAA,KAAT,EAAS,KAAT;AAAgB,IAAA,eAAhB,EAAgB,eAAhB;AAAiC,IAAA,wBAAjC,EAAiC,wBAAjC;AAA2D,IAAA,GAA3D,EAA2D,GAA3D;AAAgE,IAAA,aAAhE,EAAgE,aAAhE;AAA+E,IAAA,sBAA/E,EAA+E,sBAA/E;AAAuG,IAAA,MAAvG,EAAuG,MAAvG;AAA+G,IAAA,KAA/G,EAA+G,KAA/G;AAAsH,IAAA,QAAA,EAAA;AAAtH,GAAP;AACD;AAED,OAAM,SAAA,SAAA,CAAA,KAAA,EAAA,aAAA,EAAsE;AAC1E,SAAO,aAAa,IAAI,KAAK,CAAtB,eAAA,IACL,aAAa,IAAI,KAAK,CADjB,aAAA,IAEL,aAAa,GAAb,WAAA,KAAgC,KAAK,CAFvC,sBAAA;AAGD;AAED,OAAM,SAAA,YAAA,CAAA,KAAA,EAAA,GAAA,EAAA,aAAA,EAAA,YAAA,EAAuH;AAC3H,SAAO,aAAa,KAAK,KAAK,CAAvB,eAAA,IAA4C,YAAY,KAAK,GAAG,CAApB,OAAA,IAAgC,SAAS,CAAA,KAAA,EAA5F,aAA4F,CAA5F;AACD;AAED,OAAM,SAAA,kBAAA,CAAA,KAAA,EAAA,eAAA,EAAA,aAAA,EAAwG;AAC5G,SAAO,eAAe,IAAI,KAAK,CAAxB,aAAA,IAA0C,aAAa,IAAI,KAAK,CAAvE,eAAA;AACD","sourcesContent":["import {\n  parseTimestamp,\n  getDayIdentifier,\n  getTimestampIdentifier,\n  OFFSET_TIME,\n  isTimedless,\n  updateHasTime,\n} from './timestamp'\nimport { CalendarTimestamp, CalendarEvent, CalendarEventParsed } from 'vuetify/types'\n\nexport function parseEvent (\n  input: CalendarEvent,\n  index: number,\n  startProperty: string,\n  endProperty: string,\n  timed = false,\n  category: string | false = false,\n): CalendarEventParsed {\n  const startInput = input[startProperty]\n  const endInput = input[endProperty]\n  const startParsed: CalendarTimestamp = parseTimestamp(startInput, true)\n  const endParsed: CalendarTimestamp = (endInput ? parseTimestamp(endInput, true) : startParsed)\n  const start: CalendarTimestamp = isTimedless(startInput)\n    ? updateHasTime(startParsed, timed)\n    : startParsed\n  const end: CalendarTimestamp = isTimedless(endInput)\n    ? updateHasTime(endParsed, timed)\n    : endParsed\n  const startIdentifier: number = getDayIdentifier(start)\n  const startTimestampIdentifier: number = getTimestampIdentifier(start)\n  const endIdentifier: number = getDayIdentifier(end)\n  const endOffset: number = start.hasTime ? 0 : 2359\n  const endTimestampIdentifier: number = getTimestampIdentifier(end) + endOffset\n  const allDay: boolean = !start.hasTime\n\n  return { input, start, startIdentifier, startTimestampIdentifier, end, endIdentifier, endTimestampIdentifier, allDay, index, category }\n}\n\nexport function isEventOn (event: CalendarEventParsed, dayIdentifier: number): boolean {\n  return dayIdentifier >= event.startIdentifier &&\n    dayIdentifier <= event.endIdentifier &&\n    dayIdentifier * OFFSET_TIME !== event.endTimestampIdentifier\n}\n\nexport function isEventStart (event: CalendarEventParsed, day: CalendarTimestamp, dayIdentifier: number, firstWeekday: number): boolean {\n  return dayIdentifier === event.startIdentifier || (firstWeekday === day.weekday && isEventOn(event, dayIdentifier))\n}\n\nexport function isEventOverlapping (event: CalendarEventParsed, startIdentifier: number, endIdentifier: number): boolean {\n  return startIdentifier <= event.endIdentifier && endIdentifier >= event.startIdentifier\n}\n"],"sourceRoot":""}]}