{"remainingRequest":"/home/diih/Desktop/dev/portfolio/brascoffee-frontend/node_modules/babel-loader/lib/index.js!/home/diih/Desktop/dev/portfolio/brascoffee-frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/diih/Desktop/dev/portfolio/brascoffee-frontend/src/services/authService.js","dependencies":[{"path":"/home/diih/Desktop/dev/portfolio/brascoffee-frontend/src/services/authService.js","mtime":1601657834370},{"path":"/home/diih/Desktop/dev/portfolio/brascoffee-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/diih/Desktop/dev/portfolio/brascoffee-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/diih/Desktop/dev/portfolio/brascoffee-frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.function.name\";\nvar propertyName = \"access_token\";\nimport router from '@/router';\nexport var auth = {\n  user: {},\n  login: function login(response) {\n    localStorage.setItem(propertyName, response.jwt);\n    this.user = response.user;\n  },\n  logout: function logout() {\n    localStorage.removeItem(propertyName);\n    this.user = {};\n    router.push({\n      name: 'login'\n    });\n  },\n  isAuthenticated: function isAuthenticated() {\n    return !!localStorage.getItem(propertyName);\n  },\n  getToken: function getToken() {\n    return localStorage.getItem(propertyName);\n  },\n  getUserRoles: function getUserRoles() {\n    if (this.user.roles) {\n      return this.user.roles.map(function (userRoles) {\n        return userRoles.name.toLowerCase();\n      });\n    } else {\n      return [];\n    }\n  },\n  getUser: function getUser() {\n    return this.user;\n  },\n  getUsername: function getUsername() {\n    return this.user.username;\n  },\n  isAdmin: function isAdmin() {\n    return this.getUserRoles.find(function (role) {\n      return role.name === 'admin';\n    });\n  },\n  setUser: function setUser(user) {\n    this.user = user;\n  }\n};",{"version":3,"sources":["/home/diih/Desktop/dev/portfolio/brascoffee-frontend/src/services/authService.js"],"names":["propertyName","router","auth","user","login","response","localStorage","setItem","jwt","logout","removeItem","push","name","isAuthenticated","getItem","getToken","getUserRoles","roles","map","userRoles","toLowerCase","getUser","getUsername","username","isAdmin","find","role","setUser"],"mappings":";;AAAA,IAAMA,YAAY,GAAG,cAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAGA,OAAO,IAAMC,IAAI,GAAG;AAClBC,EAAAA,IAAI,EAAE,EADY;AAElBC,EAAAA,KAAK,EAAE,eAAUC,QAAV,EAAoB;AACzBC,IAAAA,YAAY,CAACC,OAAb,CAAqBP,YAArB,EAAmCK,QAAQ,CAACG,GAA5C;AACA,SAAKL,IAAL,GAAYE,QAAQ,CAACF,IAArB;AACD,GALiB;AAMlBM,EAAAA,MAAM,EAAE,kBAAY;AAClBH,IAAAA,YAAY,CAACI,UAAb,CAAwBV,YAAxB;AACA,SAAKG,IAAL,GAAY,EAAZ;AACAF,IAAAA,MAAM,CAACU,IAAP,CAAY;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAZ;AACD,GAViB;AAWlBC,EAAAA,eAAe,EAAE,2BAAM;AAErB,WAAO,CAAC,CAACP,YAAY,CAACQ,OAAb,CAAqBd,YAArB,CAAT;AACD,GAdiB;AAelBe,EAAAA,QAAQ,EAAE,oBAAM;AACd,WAAOT,YAAY,CAACQ,OAAb,CAAqBd,YAArB,CAAP;AACD,GAjBiB;AAkBlBgB,EAAAA,YAAY,EAAE,wBAAY;AACxB,QAAI,KAAKb,IAAL,CAAUc,KAAd,EAAqB;AACnB,aAAO,KAAKd,IAAL,CAAUc,KAAV,CAAgBC,GAAhB,CAAoB,UAAAC,SAAS;AAAA,eAAIA,SAAS,CAACP,IAAV,CAAeQ,WAAf,EAAJ;AAAA,OAA7B,CAAP;AACD,KAFD,MAEO;AACL,aAAO,EAAP;AACD;AACF,GAxBiB;AAyBlBC,EAAAA,OAAO,EAAE,mBAAY;AACnB,WAAO,KAAKlB,IAAZ;AACD,GA3BiB;AA4BlBmB,EAAAA,WAAW,EAAE,uBAAY;AACvB,WAAO,KAAKnB,IAAL,CAAUoB,QAAjB;AACD,GA9BiB;AA+BlBC,EAAAA,OAAO,EAAE,mBAAY;AACnB,WAAO,KAAKR,YAAL,CAAkBS,IAAlB,CAAuB,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACd,IAAL,KAAc,OAAlB;AAAA,KAA3B,CAAP;AACD,GAjCiB;AAkClBe,EAAAA,OAAO,EAAE,iBAAUxB,IAAV,EAAgB;AACvB,SAAKA,IAAL,GAAYA,IAAZ;AACD;AApCiB,CAAb","sourcesContent":["const propertyName = \"access_token\"\nimport router from '@/router'\n\n\nexport const auth = {\n  user: {},\n  login: function (response) {\n    localStorage.setItem(propertyName, response.jwt);\n    this.user = response.user;\n  },\n  logout: function () {\n    localStorage.removeItem(propertyName);\n    this.user = {}\n    router.push({ name: 'login' })\n  },\n  isAuthenticated: () => {\n    \n    return !!localStorage.getItem(propertyName);\n  },\n  getToken: () => {\n    return localStorage.getItem(propertyName);\n  },\n  getUserRoles: function () {\n    if (this.user.roles) {\n      return this.user.roles.map(userRoles => userRoles.name.toLowerCase())\n    } else {\n      return []\n    }\n  },\n  getUser: function () {\n    return this.user\n  },\n  getUsername: function () {\n    return this.user.username\n  },\n  isAdmin: function () {\n    return this.getUserRoles.find(role => role.name === 'admin')\n  },\n  setUser: function (user) {\n    this.user = user;\n  }\n}"]}]}