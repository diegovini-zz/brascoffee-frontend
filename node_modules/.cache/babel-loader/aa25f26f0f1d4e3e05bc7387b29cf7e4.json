{"remainingRequest":"/home/diih/Desktop/dev/portfolio/brascoffee-frontend/node_modules/babel-loader/lib/index.js!/home/diih/Desktop/dev/portfolio/brascoffee-frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/diih/Desktop/dev/portfolio/brascoffee-frontend/src/router.js","dependencies":[{"path":"/home/diih/Desktop/dev/portfolio/brascoffee-frontend/src/router.js","mtime":1601662179216},{"path":"/home/diih/Desktop/dev/portfolio/brascoffee-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/diih/Desktop/dev/portfolio/brascoffee-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/diih/Desktop/dev/portfolio/brascoffee-frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.function.name\";\nimport Vue from 'vue';\nimport Router from 'vue-router';\nimport { VDatePickerYears } from 'vuetify/lib';\nimport { repositoryFactory } from \"./repositories/repositoryFactory\";\nimport { auth } from \"./services/authService\";\nimport { roles } from \"./services/rolesService\";\nvar authRepository = repositoryFactory.get(\"authRepository\");\nVue.use(Router);\nvar router = new Router({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: [{\n    path: '',\n    name: '',\n    redirect: 'login',\n    component: function component() {\n      return import('@/layouts/FullPage.vue');\n    },\n    children: [{\n      path: '/login',\n      name: 'login',\n      component: function component() {\n        return import(\"./views/Login.vue\");\n      },\n      meta: {\n        requiresAuth: false,\n        roles: []\n      }\n    }]\n  }, {\n    path: '',\n    component: function component() {\n      return import('@/layouts/Panel.vue');\n    },\n    children: [{\n      path: '/beverages',\n      name: 'beverages',\n      component: function component() {\n        return import(\"./views/Beverages.vue\");\n      },\n      meta: {\n        requiresAuth: true,\n        roles: [roles.admin]\n      }\n    }, {\n      path: '/condiments',\n      name: 'condiments',\n      // route level code-splitting\n      // this generates a separate chunk (about.[hash].js) for this route\n      // which is lazy-loaded when the route is visited.\n      component: function component() {\n        return import(\n        /* webpackChunkName: \"about\" */\n        \"./views/Condiments.vue\");\n      },\n      meta: {\n        requiresAuth: true,\n        roles: [roles.admin]\n      }\n    }, {\n      path: '/orders',\n      name: 'orders',\n      component: function component() {\n        return import('@/views/Orders.vue');\n      },\n      meta: {\n        requiresAuth: true,\n        roles: [roles.admin, roles.user]\n      }\n    }, {\n      path: '/notfound',\n      name: 'notfound',\n      component: function component() {\n        return import(\"./views/Notfound.vue\");\n      },\n      meta: {\n        requiresAuth: true,\n        roles: []\n      }\n    }]\n  }]\n});\nrouter.beforeEach(function (to, from, next) {\n  if (to.meta.requiresAuth) {\n    if (Vue.prototype['$auth'].isAuthenticated()) {\n      if (to.name === 'notfound') {\n        next();\n      }\n\n      authRepository.getUser().then(function (response) {\n        Vue.prototype['$auth'].setUser(response.data.user);\n\n        if (to.meta.roles.filter(function (routeRoles) {\n          return Vue.prototype['$auth'].getUserRoles().includes(routeRoles.toLowerCase());\n        }).length) {\n          next();\n        } else {\n          console.log('User does not have permission to access this link');\n          next({\n            name: 'notfound'\n          });\n        }\n      });\n    } else {\n      next({\n        name: 'login'\n      });\n    }\n  } else {\n    if (!to.name) {\n      next({\n        name: 'notfound'\n      });\n    }\n\n    next();\n  }\n});\nexport default router;",{"version":3,"sources":["/home/diih/Desktop/dev/portfolio/brascoffee-frontend/src/router.js"],"names":["Vue","Router","VDatePickerYears","repositoryFactory","auth","roles","authRepository","get","use","router","mode","base","process","env","BASE_URL","routes","path","name","redirect","component","children","meta","requiresAuth","admin","user","beforeEach","to","from","next","prototype","isAuthenticated","getUser","then","response","setUser","data","filter","routeRoles","getUserRoles","includes","toLowerCase","length","console","log"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Router from 'vue-router'\nimport { VDatePickerYears } from 'vuetify/lib'\n\nimport { repositoryFactory } from './repositories/repositoryFactory'\nimport { auth } from './services/authService'\nimport { roles } from './services/rolesService'\n\n\nconst authRepository = repositoryFactory.get(\"authRepository\")\n\nVue.use(Router)\n\nconst router = new Router({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: [\n    {\n      path: '',\n      name: '',\n      redirect: 'login',\n      component: () => import('@/layouts/FullPage.vue'),\n      children: [\n        {\n          path: '/login',\n          name: 'login',\n          component: () => import('./views/Login.vue'),\n          meta: { requiresAuth: false, roles: [] }\n        },\n\n      ]\n    },\n    {\n      path: '',\n      component: () => import('@/layouts/Panel.vue'),\n      children: [\n        {\n          path: '/beverages',\n          name: 'beverages',\n          component: () => import('./views/Beverages.vue'),\n          meta: { requiresAuth: true, roles: [roles.admin] },\n        },\n        {\n          path: '/condiments',\n          name: 'condiments',\n          // route level code-splitting\n          // this generates a separate chunk (about.[hash].js) for this route\n          // which is lazy-loaded when the route is visited.\n          component: () => import(/* webpackChunkName: \"about\" */ './views/Condiments.vue'),\n          meta: { requiresAuth: true, roles: [roles.admin] }\n        },\n        {\n          path: '/orders',\n          name: 'orders',\n          component: () => import('@/views/Orders.vue'),\n          meta: { requiresAuth: true, roles: [roles.admin, roles.user] }\n        },\n        {\n          path: '/notfound',\n          name: 'notfound',\n          component: () => import('./views/Notfound.vue'),\n          meta: { requiresAuth: true, roles: [] }\n        },\n\n      ]\n    },\n\n\n  ]\n})\n\nrouter.beforeEach((to, from, next) => {\n\n  if (to.meta.requiresAuth) {\n    if (Vue.prototype['$auth'].isAuthenticated()) {\n\n      if (to.name === 'notfound') {\n        next()\n      }\n      authRepository.getUser().then(response => {\n        Vue.prototype.['$auth'].setUser(response.data.user)\n\n        if (to.meta.roles.filter(routeRoles => Vue.prototype['$auth'].getUserRoles().includes(routeRoles.toLowerCase())).length) {\n          next()\n        } else {\n          console.log('User does not have permission to access this link')\n          next({ name: 'notfound' })\n        }\n\n      })\n    } else {\n      next({ name: 'login' })\n    }\n  } else {\n    if (!to.name) {\n      next({ name: 'notfound' })\n    }\n    next()\n  }\n\n\n\n}\n)\n\n\n\nexport default router\n"]}]}