{"remainingRequest":"/home/diih/Desktop/dev/portfolio/brascoffee-frontend/node_modules/babel-loader/lib/index.js!/home/diih/Desktop/dev/portfolio/brascoffee-frontend/node_modules/vuetify/lib/components/VVirtualScroll/VVirtualScroll.js","dependencies":[{"path":"/home/diih/Desktop/dev/portfolio/brascoffee-frontend/node_modules/vuetify/lib/components/VVirtualScroll/VVirtualScroll.js","mtime":499162500000},{"path":"/home/diih/Desktop/dev/portfolio/brascoffee-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/diih/Desktop/dev/portfolio/brascoffee-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n// Styles\nimport \"../../../src/components/VVirtualScroll/VVirtualScroll.sass\"; // Mixins\n\nimport Measurable from \"../../mixins/measurable\"; // Directives\n\nimport Scroll from \"../../directives/scroll\"; // Utilities\n\nimport { convertToUnit, getSlot } from \"../../util/helpers\";\nexport default Measurable.extend({\n  name: 'v-virtual-scroll',\n  directives: {\n    Scroll: Scroll\n  },\n  props: {\n    bench: {\n      type: [Number, String],\n      default: 0\n    },\n    itemHeight: {\n      type: [Number, String],\n      required: true\n    },\n    items: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      first: 0,\n      last: 0,\n      scrollTop: 0\n    };\n  },\n  computed: {\n    __bench: function __bench() {\n      return parseInt(this.bench, 10);\n    },\n    __itemHeight: function __itemHeight() {\n      return parseInt(this.itemHeight, 10);\n    },\n    firstToRender: function firstToRender() {\n      return Math.max(0, this.first - this.__bench);\n    },\n    lastToRender: function lastToRender() {\n      return Math.min(this.items.length, this.last + this.__bench);\n    }\n  },\n  watch: {\n    height: 'onScroll',\n    itemHeight: 'onScroll'\n  },\n  mounted: function mounted() {\n    this.last = this.getLast(0);\n  },\n  methods: {\n    getChildren: function getChildren() {\n      return this.items.slice(this.firstToRender, this.lastToRender).map(this.genChild);\n    },\n    genChild: function genChild(item, index) {\n      index += this.firstToRender;\n      var top = convertToUnit(index * this.__itemHeight);\n      return this.$createElement('div', {\n        staticClass: 'v-virtual-scroll__item',\n        style: {\n          top: top\n        },\n        key: index\n      }, getSlot(this, 'default', {\n        index: index,\n        item: item\n      }));\n    },\n    getFirst: function getFirst() {\n      return Math.floor(this.scrollTop / this.__itemHeight);\n    },\n    getLast: function getLast(first) {\n      var height = parseInt(this.height || 0, 10) || this.$el.clientHeight;\n      return first + Math.ceil(height / this.__itemHeight);\n    },\n    onScroll: function onScroll() {\n      this.scrollTop = this.$el.scrollTop;\n      this.first = this.getFirst();\n      this.last = this.getLast(this.first);\n    }\n  },\n  render: function render(h) {\n    var content = h('div', {\n      staticClass: 'v-virtual-scroll__container',\n      style: {\n        height: convertToUnit(this.items.length * this.__itemHeight)\n      }\n    }, this.getChildren());\n    return h('div', {\n      staticClass: 'v-virtual-scroll',\n      style: this.measurableStyles,\n      directives: [{\n        name: 'scroll',\n        modifiers: {\n          self: true\n        },\n        value: this.onScroll\n      }],\n      on: this.$listeners\n    }, [content]);\n  }\n});",{"version":3,"sources":["../../../src/components/VVirtualScroll/VVirtualScroll.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport './VVirtualScroll.sass'\n\n// Mixins\nimport Measurable from '../../mixins/measurable'\n\n// Directives\nimport Scroll from '../../directives/scroll'\n\n// Utilities\nimport {\n  convertToUnit,\n  getSlot,\n} from '../../util/helpers'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nexport default Measurable.extend({\n  name: 'v-virtual-scroll',\n\n  directives: { Scroll },\n\n  props: {\n    bench: {\n      type: [Number, String],\n      default: 0,\n    },\n    itemHeight: {\n      type: [Number, String],\n      required: true,\n    },\n    items: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n  },\n\n  data: () => ({\n    first: 0,\n    last: 0,\n    scrollTop: 0,\n  }),\n\n  computed: {\n    __bench (): number {\n      return parseInt(this.bench, 10)\n    },\n    __itemHeight (): number {\n      return parseInt(this.itemHeight, 10)\n    },\n    firstToRender (): number {\n      return Math.max(0, this.first - this.__bench)\n    },\n    lastToRender (): number {\n      return Math.min(this.items.length, this.last + this.__bench)\n    },\n  },\n\n  watch: {\n    height: 'onScroll',\n    itemHeight: 'onScroll',\n  },\n\n  mounted () {\n    this.last = this.getLast(0)\n  },\n\n  methods: {\n    getChildren (): VNode[] {\n      return this.items.slice(\n        this.firstToRender,\n        this.lastToRender,\n      ).map(this.genChild)\n    },\n    genChild (item: any, index: number) {\n      index += this.firstToRender\n\n      const top = convertToUnit(index * this.__itemHeight)\n\n      return this.$createElement('div', {\n        staticClass: 'v-virtual-scroll__item',\n        style: { top },\n        key: index,\n      }, getSlot(this, 'default', { index, item }))\n    },\n    getFirst (): number {\n      return Math.floor(this.scrollTop / this.__itemHeight)\n    },\n    getLast (first: number): number {\n      const height = parseInt(this.height || 0, 10) || this.$el.clientHeight\n\n      return first + Math.ceil(height / this.__itemHeight)\n    },\n    onScroll () {\n      this.scrollTop = this.$el.scrollTop\n      this.first = this.getFirst()\n      this.last = this.getLast(this.first)\n    },\n  },\n\n  render (h): VNode {\n    const content = h('div', {\n      staticClass: 'v-virtual-scroll__container',\n      style: {\n        height: convertToUnit((this.items.length * this.__itemHeight)),\n      },\n    }, this.getChildren())\n\n    return h('div', {\n      staticClass: 'v-virtual-scroll',\n      style: this.measurableStyles,\n      directives: [{\n        name: 'scroll',\n        modifiers: { self: true },\n        value: this.onScroll,\n      }],\n      on: this.$listeners,\n    }, [content])\n  },\n})\n"],"sourceRoot":""}]}